{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/products/products.component.ts","webpack:///src/app/pages/products/products.component.html","webpack:///src/app/pages/wip/wip.component.ts","webpack:///src/app/pages/wip/wip.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","breakpointObserver","isHandset$","observe","Handset","pipe","result","matches","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AboutComponent","HomeComponent","ProductsComponent","WipComponent","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ProductsComponent } from './pages/products/products.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { WipComponent } from './pages/wip/wip.component';\n\n\nconst routes: Routes = [\n  { path: '', component: WipComponent },\n  { path: 'products', component: ProductsComponent },\n  { path: 'about', component: AboutComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar color=\"primary\"></mat-toolbar>\n    <mat-nav-list>\n      <!-- <a mat-list-item [routerLink]=\"['/']\" routerLinkActive=\"active-route\" [routerLinkActiveOptions]=\"{exact: true}\">home</a>\n      <a mat-list-item [routerLink]=\"['products']\" routerLinkActive=\"active-route\">products</a>\n      <a mat-list-item [routerLink]=\"['about']\" routerLinkActive=\"active-route\">about</a> -->\n    </mat-nav-list>\n    <mat-toolbar class=\"footer\" color=\"primary\">\n      &copy; 2020 arbirary\n    </mat-toolbar>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar class=\"main\" color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span *ngIf=\"isHandset$ | async\"></span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { ProductsComponent } from './pages/products/products.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { WipComponent } from './pages/wip/wip.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProductsComponent,\n    AboutComponent,\n    WipComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatCardModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pattern-dots-md top-dots\">\n    <h1>about</h1>\n</div>\nwe are a small team of passionate developers that strive to make awesome things.","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pattern-dots-md top-dots\">\n    <h1>software dev</h1>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pattern-dots-md top-dots\">\n  <h1>products</h1>\n</div>\n<h2>in production</h2>\n<mat-card class=\"product-card\">\n  <mat-card-header>\n    <mat-card-title>\n      testube\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    a simple web app that allows Tesla drivers to easily access fullscreen media in their cars while parked. Normally,\n    doing this is a complicated process that is harder than it needs to be. Testube makes the process as easy as\n    possible, ensuring you get to your media quickly.\n  </mat-card-content>\n</mat-card>\n<h2>in development</h2>\n<mat-card class=\"product-card\">\n    <mat-card-header>\n      <mat-card-title>\n        copilot\n      </mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      a one-stop-shop for managing your tesla vehicle on any of your devices. \n    </mat-card-content>\n  </mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wip',\n  templateUrl: './wip.component.html',\n  styleUrls: ['./wip.component.scss']\n})\nexport class WipComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"pattern-dots-md top-dots\">\n    <h1>Under Construction</h1>\n</div>\n<br><br><br>\n<h1>We are still ironing some things out...</h1>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}